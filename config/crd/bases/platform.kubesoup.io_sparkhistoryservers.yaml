---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: sparkhistoryservers.platform.kubesoup.io
spec:
  group: platform.kubesoup.io
  names:
    kind: SparkHistoryServer
    listKind: SparkHistoryServerList
    plural: sparkhistoryservers
    singular: sparkhistoryserver
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: SparkHistoryServer is the Schema for the sparkhistoryservers
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SparkHistoryServerSpec defines the desired state of SparkHistoryServer
            properties:
              bucket:
                description: Bucket name (not the full folder path) where the sparkhistoryserver
                  should look at
                type: string
              cleaner:
                default:
                  enabled: true
                  maxAge: 30d
                description: 'Configures the "cleaner" feature of sparkhistoryserver,
                  a.k.a. logretention or logrotation More info: https://spark.apache.org/docs/latest/monitoring.html#spark-history-server-configuration-options'
                properties:
                  enabled:
                    default: true
                    description: 'Specifies whether the History Server should periodically
                      clean up event logs from storage. More info: https://spark.apache.org/docs/latest/monitoring.html#spark-history-server-configuration-options'
                    type: boolean
                  maxAge:
                    default: 30d
                    description: 'Job history files older than this will be deleted
                      when the filesystem history cleaner runs. More info: https://spark.apache.org/docs/latest/monitoring.html#spark-history-server-configuration-options'
                    type: string
                type: object
              image:
                description: 'Container image name. More info: https://kubernetes.io/docs/concepts/containers/images'
                type: string
              imagePullPolicy:
                default: IfNotPresent
                description: 'Image pull policy. One of Always, Never, IfNotPresent.
                  More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                type: string
              replicas:
                default: 1
                description: 'Replicas is the number of desired replicas. More info:
                  https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller'
                format: int32
                type: integer
              resources:
                default:
                  limits:
                    cpu: 1000m
                    memory: 1Gi
                  requests:
                    cpu: 100m
                    memory: 512Mi
                description: 'Compute Resources required by this container. More info:
                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              serviceAccountName:
                default: default-editor
                description: 'ServiceAccountName is the name of the ServiceAccount
                  to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                type: string
            required:
            - image
            type: object
          status:
            description: SparkHistoryServerStatus defines the observed state of SparkHistoryServer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
